#include <SoftwareSerial.h>
#include <LiquidCrystal_I2C.h>
#include <Wire.h>
LiquidCrystal_I2C lcd(0x27, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);
SoftwareSerial rSerial(2, 3); 
const int tagLen = 16; // total tag length
const int idLen = 13; // number of numbers kept
const int kTags = 4; //number of cards

char knownTags[kTags][idLen] = 
{
             "7A00925C69DD",    
};
char knownTags2[kTags][idLen] = 
{
            "7A0092B6BAE4", 
};
char newTag[idLen];

void setup() {
   Serial.begin(9600);
   rSerial.begin(9600);
   pinMode(9, OUTPUT);
   lcd.begin(20, 4);
   lcd.backlight();
}

void loop() {
  int i = 0;
  int readByte;
  boolean tag = false;

  if (rSerial.available() == tagLen) {
    tag = true;
  }

  if (tag == true) {
    while (rSerial.available()) {
      readByte = rSerial.read();
      if (readByte != 2 && readByte!= 13 && readByte != 10 && readByte != 3) {
        newTag[i] = readByte;
        i++;
      }
      if (readByte == 3) {
        tag = false;
      }

    }
  }
  if (strlen(newTag)== 0) {
    return;
  }

  else {
    int Hew = 0;
    int Christy = 0;

    for (int ct=0; ct < kTags; ct++){
        Hew += checkTag(newTag, knownTags[ct]);
        Christy += checkTag(newTag, knownTags2[ct]);
    }
    if (Hew > 0) {
      Serial.println("Hewitt");
      lcd.setCursor(0,0);
      lcd.print("Hello, Master");
      delay(5000);
      lcd.clear();
    }
    if (Christy > 0) {
      Serial.println("Christy");
      lcd.setCursor(0,0);
      lcd.print("Hello, Christy");
      delay(5000);
      lcd.clear();

    }

    else 
    {
        Serial.print("Unknown tag! ");
        Serial.print(newTag);
        Serial.println();
    }
  }
  for (int c=0; c < idLen; c++) {
    newTag[c] = 0;
  }
}
int checkTag(char nTag[], char oTag[]) {
    for (int i = 0; i < idLen; i++) {
      if (nTag[i] != oTag[i]) {
        return 0;
      }
    }
  return 1;
  if (Serial.available())
  {
    delay(100);
    lcd.clear();
    while (Serial.available() > 0)
    {
      lcd.write(Serial.read());
    }
  }
}
