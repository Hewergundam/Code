int ledPin = 11;

int analogPin = 0;

int val = 0;

void setup()

{
	pinMode(ledPin, OUTPUT);

	Serial.begin(9600);
}
void loop()

{
	val = analogRead(analogPin);
	Serial.println(val);

	analogWrite(ledPin, val / 4);
}

int ledPin = 11;
int analogPin = 0;
int val = 0;
float input_voltage = 0.0;
void setup()
{
	pinMode(ledPin, OUTPUT);
	Serial.begin(38400);
}

void loop()
{
	int analog_value = analogRead(A0);
	input_voltage = (analog_value * 5.0) / 1024.0;
	val = analogRead(analogPin);
	Serial.print(input_voltage);
	Serial.print(", ");
	analogWrite(ledPin, val / 4);
	delay(500);
}


int ledPin = 11;
int analogPin = 0;
int val = 0;
int x;
void setup()
{
	pinMode(ledPin, OUTPUT);
	Serial.begin(38400);
}

void loop()
{
	int x = analogRead(A0);
	x = map(x, 0, 1024, 0, 5);
	Serial.print(x);
	Serial.print(", ");
	analogWrite(ledPin, val / 4);
	delay(500);
}


int x;
void setup()
{
	pinMode(10, OUTPUT);
}

void loop()
{
	for(x = 0; x <= 200; x++)
	{
		digitalWrite(10, HIGH);
		delayMicroseconds(2024);
		digitalWrite(10, LOW);
		delayMicroseconds(2024);
	}

	for(x = 0; x <= 200; x++)
	{
	
		digitalWrite(10, HIGH);
		delayMicroseconds(2272);
		digitalWrite(10, LOW);
		delayMicroseconds(2272);
	}

	for(x = 0; x <= 200; x++)
	{

		digitalWrite(10, HIGH);
		delayMicroseconds(2551);
		digitalWrite(10, LOW);
		delayMicroseconds(2551);
	}

	for(x = 0; x <= 200; x++)
	{
	
		digitalWrite(10, HIGH);
		delayMicroseconds(2272);
		digitalWrite(10, LOW);
		delayMicroseconds(2272);
	}
	
}

#include <LiquidCrystal.h>

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
void setup()
{
	lcd.begin(16, 2);
	lcd.setCursor(3, 0);
	lcd.print("Hewitt");
	lcd.setCursor(3, 1);
	lcd.print("Situ");
}

void loop()
{
	
}


float tempC;float tempF;int reading;int tempPin = 0;int x;#include <LiquidCrystal.h>LiquidCrystal lcd(12, 11, 5, 4, 3, 2);void setup(){	analogReference(INTERNAL);	lcd.begin(16, 2);Serial.begin(9600);}void loop(){		reading = analogRead(tempPin);	tempC = reading / 9.31;	lcd.write(tempC);	Serial.println(tempC);	tempF = tempC * 1.8 + 32;	lcd.write(tempF);	Serial.println(tempF);	delay(1000);}

int digitalpin = 13;
int x;
void setup()
{
	pinMode(digitalpin, INPUT);
	Serial.begin(9600);
}

void loop()
{
	x = digitalRead(digitalpin);
	Serial.print(x);
	Serial.print(" , ");
	delay(1000);
}

int x;
int pin = 8;
int count = 0;
int val = 0;
void setup()
{
	Serial.begin(38400);
	pinMode(pin, INPUT);
}

void loop()
{
	val = digitalRead(8);
	if (val == LOW)
	{
		
		count = count + 1;
		Serial.print(count);
		Serial.print(",");
		delay(100);
		
	}
	
}


Working on: void setup()
{
	pinMode(8, OUTPUT);
}

void loop()
{
	digitalWrite(8, HIGH);
	delayMicroseconds(100);
	digitalWrite(8, LOW);
	delayMicroseconds(100);
	
}

#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>
#include <SPI.h>
#define TFT_CS 10
#define TFT_RST 9
#define TFT_DC 9

#define TFT_MOST 11
#define TFT_SCLK 13

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS,  TFT_DC, TFT_RST);

void setup()
{
  Serial.begin(9600);
  Serial.print("Link Start");
 tft.initR(INITR_BLACKTAB);
 Serial.println("Initialized");
 uint16_t time = millis();
 tft.fillScreen(ST7735_BLACK);
 time = millis() - time;
 
 tft.fillScreen(ST7735_WHITE);
 testdrawtext("HELLO THERE, I HAVE BEEN EXPECTING YOU ", ST7735_BLACK);
 tftPrintText();
 delay(4000);
 
 }
 
void loop()
{
  tft.invertDisplay(true);
  delay(500);
  tft.invertDisplay(false);
  delay(500);
}
void tftPrintText()
{
  tft.setTextWrap(true);
  tft.fillScreen(ST7735_WHITE);
  tft.setCursor(0, 30);
  tft.setTextColor(ST7735_BLACK);
  tft.setTextSize(1);
  tft.println("WELCOME");
  tft.setTextColor(ST7735_BLACK);
  tft.setTextSize(2);
  tft.println("TO");
  tft.setTextColor(ST7735_RED);
  tft.setTextSize(4);
  tft.println("HELL");
  delay(100);
}
 void testdrawtext(char *text, uint16_t color)
 {
     tft.setCursor(0, 0);
  tft.setTextColor(color);
  tft.setTextWrap(true);
  tft.print(text);
 }
